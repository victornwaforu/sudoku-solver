{
  "{\"sourceRoot\":\"/Users/VUNsMacOS/Desktop/sudoku-solver/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/VUNsMacOS/Desktop/sudoku-solver\",\"filename\":\"/Users/VUNsMacOS/Desktop/sudoku-solver/routes/api.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/VUNsMacOS/Desktop/sudoku-solver\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/VUNsMacOS/Desktop/sudoku-solver/routes/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/VUNsMacOS/Desktop/sudoku-solver",
      "filename": "/Users/VUNsMacOS/Desktop/sudoku-solver/routes/api.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/Users/VUNsMacOS/Desktop/sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/VUNsMacOS/Desktop/sudoku-solver/routes/api.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/VUNsMacOS/Desktop/sudoku-solver/routes/api.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/VUNsMacOS/Desktop/sudoku-solver/routes/",
        "sourceFileName": "api.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nvar SudokuSolver = require('../controllers/sudoku-solver.js');\n\nmodule.exports = function (app) {\n  var solver = new SudokuSolver();\n  app.route('/api/check').post(function (req, res) {\n    var _req$body = req.body,\n        puzzle = _req$body.puzzle,\n        coordinate = _req$body.coordinate,\n        value = _req$body.value;\n\n    if (!puzzle || !coordinate || !value) {\n      res.json({\n        error: \"Required field(s) missing\"\n      });\n      return;\n    }\n\n    var row = coordinate.split(\"\")[0];\n    var column = coordinate.split(\"\")[1];\n\n    if (coordinate.length !== 2 || !/[a-i]/i.test(row) || !/[1-9]/i.test(column)) {\n      res.json({\n        error: \"Invalid coordinate\"\n      });\n      return;\n    }\n\n    if (!/^[1-9]$/.test(+value)) {\n      res.json({\n        error: \"Invalid value\"\n      });\n      return;\n    }\n\n    if (puzzle.length != 81) {\n      res.json({\n        error: \"Expected puzzle to be 81 characters long\"\n      });\n      return;\n    }\n\n    if (/[^0-9.]/g.test(puzzle)) {\n      res.json({\n        error: \"Invalid characters in puzzle\"\n      });\n      return;\n    }\n\n    var validCol = solver.checkColPlacement(puzzle, row, column, value);\n    var validReg = solver.checkRegionPlacement(puzzle, row, column, value);\n    var validRow = solver.checkRowPlacement(puzzle, row, column, value);\n    var conflicts = [];\n\n    if (validCol && validReg && validRow) {\n      res.json({\n        valid: true\n      });\n    } else {\n      if (!validRow) {\n        conflicts.push(\"row\");\n      }\n\n      if (!validCol) {\n        conflicts.push(\"column\");\n      }\n\n      if (!validReg) {\n        conflicts.push(\"region\");\n      }\n\n      res.json({\n        valid: false,\n        conflict: conflicts\n      });\n    }\n  });\n  app.route('/api/solve').post(function (req, res) {\n    var puzzle = req.body.puzzle;\n\n    if (!puzzle) {\n      res.json({\n        error: \"Required field missing\"\n      });\n      return;\n    }\n\n    if (puzzle.length != 81) {\n      res.json({\n        error: \"Expected puzzle to be 81 characters long\"\n      });\n      return;\n    }\n\n    if (/[^0-9.]/g.test(puzzle)) {\n      res.json({\n        error: \"Invalid characters in puzzle\"\n      });\n      return;\n    }\n\n    var solvedString = solver.solve(puzzle);\n\n    if (!solvedString) {\n      res.json({\n        error: \"Puzzle cannot be solved\"\n      });\n    } else {\n      res.json({\n        solution: solvedString\n      });\n    }\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS5qcyJdLCJuYW1lcyI6WyJTdWRva3VTb2x2ZXIiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsInNvbHZlciIsInJvdXRlIiwicG9zdCIsInJlcSIsInJlcyIsImJvZHkiLCJwdXp6bGUiLCJjb29yZGluYXRlIiwidmFsdWUiLCJqc29uIiwiZXJyb3IiLCJyb3ciLCJzcGxpdCIsImNvbHVtbiIsImxlbmd0aCIsInRlc3QiLCJ2YWxpZENvbCIsImNoZWNrQ29sUGxhY2VtZW50IiwidmFsaWRSZWciLCJjaGVja1JlZ2lvblBsYWNlbWVudCIsInZhbGlkUm93IiwiY2hlY2tSb3dQbGFjZW1lbnQiLCJjb25mbGljdHMiLCJ2YWxpZCIsInB1c2giLCJjb25mbGljdCIsInNvbHZlZFN0cmluZyIsInNvbHZlIiwic29sdXRpb24iXSwibWFwcGluZ3MiOiJBQUFBOztBQUVBLElBQU1BLFlBQVksR0FBR0MsT0FBTyxDQUFDLGlDQUFELENBQTVCOztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBVUMsR0FBVixFQUFlO0FBRTlCLE1BQUlDLE1BQU0sR0FBRyxJQUFJTCxZQUFKLEVBQWI7QUFFQUksRUFBQUEsR0FBRyxDQUFDRSxLQUFKLENBQVUsWUFBVixFQUNHQyxJQURILENBQ1EsVUFBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQWM7QUFBQSxvQkFDb0JELEdBQUcsQ0FBQ0UsSUFEeEI7QUFBQSxRQUNWQyxNQURVLGFBQ1ZBLE1BRFU7QUFBQSxRQUNGQyxVQURFLGFBQ0ZBLFVBREU7QUFBQSxRQUNVQyxLQURWLGFBQ1VBLEtBRFY7O0FBR2xCLFFBQUksQ0FBQ0YsTUFBRCxJQUFXLENBQUNDLFVBQVosSUFBMEIsQ0FBQ0MsS0FBL0IsRUFBc0M7QUFDcENKLE1BQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTO0FBQUVDLFFBQUFBLEtBQUssRUFBRTtBQUFULE9BQVQ7QUFDQTtBQUNEOztBQUNELFFBQU1DLEdBQUcsR0FBR0osVUFBVSxDQUFDSyxL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QUFDRDs7QUFDRCxRQUFJLFdBQVdLLElBQVgsQ0FBZ0JULE1BQWhCLENBQUosRUFBNkI7QUFDM0JGLE1BQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTO0FBQUVDLFFBQUFBLEtBQUssRUFBRTtBQUFULE9BQVQ7QUFDQTtBQUNEOztBQUVELFFBQUlnQixZQUFZLEdBQUcxQixNQUFNLENBQUMyQixLQUFQLENBQWFyQixNQUFiLENBQW5COztBQUNBLFFBQUksQ0FBQ29CLFlBQUwsRUFBbUI7QUFDakJ0QixNQUFBQSxHQUFHLENBQUNLLElBQUosQ0FBUztBQUFFQyxRQUFBQSxLQUFLLEVBQUU7QUFBVCxPQUFUO0FBQ0QsS0FGRCxNQUVPO0FBQ0xOLE1BQUFBLEdBQUcsQ0FBQ0ssSUFBSixDQUFTO0FBQUVtQixRQUFBQSxRQUFRLEVBQUVGO0FBQVosT0FBVDtBQUNEO0FBQ0YsR0F0Qkg7QUF1QkQsQ0EzRUQiLCJzb3VyY2VSb290IjoiL1VzZXJzL1ZVTnNNYWNPUy9EZXNrdG9wL3N1ZG9rdS1zb2x2ZXIvcm91dGVzLyIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgU3Vkb2t1U29sdmVyID0gcmVxdWlyZSgnLi4vY29udHJvbGxlcnMvc3Vkb2t1LXNvbHZlci5qcycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChhcHApIHtcbiAgXG4gIGxldCBzb2x2ZXIgPSBuZXcgU3Vkb2t1U29sdmVyKCk7XG5cbiAgYXBwLnJvdXRlKCcvYXBpL2NoZWNrJylcbiAgICAucG9zdCgocmVxLCByZXMpID0+IHtcbiAgICAgIGNvbnN0IHsgcHV6emxlLCBjb29yZGluYXRlLCB2YWx1ZSB9ID0gcmVxLmJvZHk7XG5cbiAgICAgIGlmICghcHV6emxlIHx8ICFjb29yZGluYXRlIHx8ICF2YWx1ZSkge1xuICAgICAgICByZXMuanNvbih7IGVycm9yOiBcIlJlcXVpcmVkIGZpZWxkKHMpIG1pc3NpbmdcIiB9KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgY29uc3Qgcm93ID0gY29vcmRpbmF0ZS5zcGxpdChcIlwiKVswXTtcbiAgICAgIGNvbnN0IGNvbHVtbiA9IGNvb3JkaW5hdGUuc3BsaXQoXCJcIilbMV07XG4gICAgICBpZiAoY29vcmRpbmF0ZS5sZW5ndGggIT09IDIgfHwgIS9bYS1pXS9pLnRlc3Qocm93KSB8fCAhL1sxLTldL2kudGVzdChjb2x1bW4pKSB7XG4gICAgICAgIHJlcy5qc29uKHsgZXJyb3I6IFwiSW52YWxpZCBjb29yZGluYXRlXCIgfSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmICghL15bMS05XSQvLnRlc3QoK3ZhbHVlKSkge1xuICAgICAgICByZXMuanNvbih7IGVycm9yOiBcIkludmFsaWQgdmFsdWVcIiB9KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgaWYgKHB1enpsZS5sZW5ndGggIT0gODEpIHtcbiAgICAgICAgcmVzLmpzb24oeyBlcnJvcjogXCJFeHBlY3RlZCBwdXp6bGUgdG8gYmUgODEgY2hhcmFjdGVycyBsb25nXCIgfSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmICgvW14wLTkuXS9nLnRlc3QocHV6emxlKSkge1xuICAgICAgICByZXMuanNvbih7IGVycm9yOiBcIkludmFsaWQgY2hhcmFjdGVycyBpbiBwdXp6bGVcIiB9KTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICBsZXQgdmFsaWRDb2wgPSBzb2x2ZXIuY2hlY2tDb2xQbGFjZW1lbnQocHV6emxlLCByb3csIGNvbHVtbiwgdmFsdWUpO1xuICAgICAgbGV0IHZhbGlkUmVnID0gc29sdmVyLmNoZWNrUmVnaW9uUGxhY2VtZW50KHB1enpsZSwgcm93LCBjb2x1bW4sIHZhbHVlKTtcbiAgICAgIGxldCB2YWxpZFJvdyA9IHNvbHZlci5jaGVja1Jvd1BsYWNlbWVudChwdXp6bGUsIHJvdywgY29sdW1uLCB2YWx1ZSk7XG4gICAgICBsZXQgY29uZmxpY3RzID0gW107XG5cbiAgICAgIGlmICh2YWxpZENvbCAmJiB2YWxpZFJlZyAmJiB2YWxpZFJvdykge1xuICAgICAgICAgcmVzLmpzb24oeyB2YWxpZDogdHJ1ZSB9KTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGlmICghdmFsaWRSb3cpIHtcbiAgICAgICAgICBjb25mbGljdHMucHVzaChcInJvd1wiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXZhbGlkQ29sKSB7XG4gICAgICAgICAgY29uZmxpY3RzLnB1c2goXCJjb2x1bW5cIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCF2YWxpZFJlZykge1xuICAgICAgICAgIGNvbmZsaWN0cy5wdXNoKFwicmVnaW9uXCIpO1xuICAgICAgICB9XG4gICAgICAgIHJlcy5qc29uKHsgdmFsaWQ6IGZhbHNlLCBjb25mbGljdDogY29uZmxpY3RzIH0pO1xuICAgICAgfVxuICAgIH0pO1xuICAgIFxuICBhcHAucm91dGUoJy9hcGkvc29sdmUnKVxuICAgIC5wb3N0KChyZXEsIHJlcykgPT4ge1xuICAgICAgY29uc3QgeyBwdXp6bGUgfSA9IHJlcS5ib2R5O1xuICAgICAgaWYgKCFwdXp6bGUpIHtcbiAgICAgICAgcmVzLmpzb24oeyBlcnJvcjogXCJSZXF1aXJlZCBmaWVsZCBtaXNzaW5nXCIgfSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGlmIChwdXp6bGUubGVuZ3RoICE9IDgxKSB7XG4gICAgICAgIHJlcy5qc29uKHsgZXJyb3I6IFwiRXhwZWN0ZWQgcHV6emxlIHRvIGJlIDgxIGNoYXJhY3RlcnMgbG9uZ1wiIH0pO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBpZiAoL1teMC05Ll0vZy50ZXN0KHB1enpsZSkpIHtcbiAgICAgICAgcmVzLmpzb24oeyBlcnJvcjogXCJJbnZhbGlkIGNoYXJhY3RlcnMgaW4gcHV6emxlXCIgfSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgbGV0IHNvbHZlZFN0cmluZyA9IHNvbHZlci5zb2x2ZShwdXp6bGUpO1xuICAgICAgaWYgKCFzb2x2ZWRTdHJpbmcpIHtcbiAgICAgICAgcmVzLmpzb24oeyBlcnJvcjogXCJQdXp6bGUgY2Fubm90IGJlIHNvbHZlZFwiIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmVzLmpzb24oeyBzb2x1dGlvbjogc29sdmVkU3RyaW5nIH0pO1xuICAgICAgfVxuICAgIH0pO1xufTtcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "api.js"
      ],
      "names": [
        "SudokuSolver",
        "require",
        "module",
        "exports",
        "app",
        "solver",
        "route",
        "post",
        "req",
        "res",
        "body",
        "puzzle",
        "coordinate",
        "value",
        "json",
        "error",
        "row",
        "split",
        "column",
        "length",
        "test",
        "validCol",
        "checkColPlacement",
        "validReg",
        "checkRegionPlacement",
        "validRow",
        "checkRowPlacement",
        "conflicts",
        "valid",
        "push",
        "conflict",
        "solvedString",
        "solve",
        "solution"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/VUNsMacOS/Desktop/sudoku-solver/routes/",
      "sourcesContent": [
        "'use strict';\n\nconst SudokuSolver = require('../controllers/sudoku-solver.js');\n\nmodule.exports = function (app) {\n  \n  let solver = new SudokuSolver();\n\n  app.route('/api/check')\n    .post((req, res) => {\n      const { puzzle, coordinate, value } = req.body;\n\n      if (!puzzle || !coordinate || !value) {\n        res.json({ error: \"Required field(s) missing\" });\n        return;\n      }\n      const row = coordinate.split(\"\")[0];\n      const column = coordinate.split(\"\")[1];\n      if (coordinate.length !== 2 || !/[a-i]/i.test(row) || !/[1-9]/i.test(column)) {\n        res.json({ error: \"Invalid coordinate\" });\n        return;\n      }\n      if (!/^[1-9]$/.test(+value)) {\n        res.json({ error: \"Invalid value\" });\n        return;\n      }\n      if (puzzle.length != 81) {\n        res.json({ error: \"Expected puzzle to be 81 characters long\" });\n        return;\n      }\n      if (/[^0-9.]/g.test(puzzle)) {\n        res.json({ error: \"Invalid characters in puzzle\" });\n        return;\n      }\n\n      let validCol = solver.checkColPlacement(puzzle, row, column, value);\n      let validReg = solver.checkRegionPlacement(puzzle, row, column, value);\n      let validRow = solver.checkRowPlacement(puzzle, row, column, value);\n      let conflicts = [];\n\n      if (validCol && validReg && validRow) {\n         res.json({ valid: true });\n      } else {\n        if (!validRow) {\n          conflicts.push(\"row\");\n        }\n        if (!validCol) {\n          conflicts.push(\"column\");\n        }\n        if (!validReg) {\n          conflicts.push(\"region\");\n        }\n        res.json({ valid: false, conflict: conflicts });\n      }\n    });\n    \n  app.route('/api/solve')\n    .post((req, res) => {\n      const { puzzle } = req.body;\n      if (!puzzle) {\n        res.json({ error: \"Required field missing\" });\n        return;\n      }\n      if (puzzle.length != 81) {\n        res.json({ error: \"Expected puzzle to be 81 characters long\" });\n        return;\n      }\n      if (/[^0-9.]/g.test(puzzle)) {\n        res.json({ error: \"Invalid characters in puzzle\" });\n        return;\n      }\n\n      let solvedString = solver.solve(puzzle);\n      if (!solvedString) {\n        res.json({ error: \"Puzzle cannot be solved\" });\n      } else {\n        res.json({ solution: solvedString });\n      }\n    });\n};\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1681568953164
  },
  "{\"sourceRoot\":\"/Users/VUNsMacOS/Desktop/sudoku-solver/controllers/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/VUNsMacOS/Desktop/sudoku-solver\",\"filename\":\"/Users/VUNsMacOS/Desktop/sudoku-solver/controllers/sudoku-solver.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/VUNsMacOS/Desktop/sudoku-solver\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.6:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/VUNsMacOS/Desktop/sudoku-solver/controllers/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/VUNsMacOS/Desktop/sudoku-solver",
      "filename": "/Users/VUNsMacOS/Desktop/sudoku-solver/controllers/sudoku-solver.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/Users/VUNsMacOS/Desktop/sudoku-solver",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/VUNsMacOS/Desktop/sudoku-solver/controllers/sudoku-solver.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/VUNsMacOS/Desktop/sudoku-solver/controllers/sudoku-solver.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/VUNsMacOS/Desktop/sudoku-solver/controllers/",
        "sourceFileName": "sudoku-solver.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar SudokuSolver = /*#__PURE__*/function () {\n  function SudokuSolver() {\n    _classCallCheck(this, SudokuSolver);\n  }\n\n  _createClass(SudokuSolver, [{\n    key: \"validate\",\n    value: function validate(puzzleString) {}\n  }, {\n    key: \"letterToNumber\",\n    value: function letterToNumber(row) {\n      switch (row.toUpperCase()) {\n        case \"A\":\n          return 1;\n\n        case \"B\":\n          return 2;\n\n        case \"C\":\n          return 3;\n\n        case \"D\":\n          return 4;\n\n        case \"E\":\n          return 5;\n\n        case \"F\":\n          return 6;\n\n        case \"G\":\n          return 7;\n\n        case \"H\":\n          return 8;\n\n        case \"I\":\n          return 9;\n\n        default:\n          return \"none\";\n      }\n    }\n  }, {\n    key: \"checkRowPlacement\",\n    value: function checkRowPlacement(puzzleString, row, column, value) {\n      var grid = this.transform(puzzleString);\n      row = this.letterToNumber(row);\n\n      if (grid[row - 1][column - 1] == value) {\n        return true;\n      }\n\n      for (var i = 0; i < 9; i++) {\n        if (grid[row - 1][i] == value) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"checkColPlacement\",\n    value: function checkColPlacement(puzzleString, row, column, value) {\n      var grid = this.transform(puzzleString);\n      row = this.letterToNumber(row);\n\n      if (grid[row - 1][column - 1] == value) {\n        return true;\n      }\n\n      for (var i = 0; i < 9; i++) {\n        if (grid[i][column - 1] == value) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"checkRegionPlacement\",\n    value: function checkRegionPlacement(puzzleString, row, col, value) {\n      var grid = this.transform(puzzleString);\n      row = this.letterToNumber(row);\n\n      if (grid[row - 1][col - 1] == value) {\n        return true;\n      }\n\n      var startRow = row - row % 3,\n          startCol = col - col % 3;\n\n      for (var i = 0; i < 3; i++) {\n        for (var j = 0; j < 3; j++) {\n          if (grid[i + startRow][j + startCol] == value) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"solveSudoku\",\n    value: function solveSudoku(grid, row, col) {\n      if (row == 9 - 1 && col == 9) {\n        return grid;\n      }\n\n      if (col == 9) {\n        row++;\n        col = 0;\n      }\n\n      if (grid[row][col] != 0) {\n        return this.solveSudoku(grid, row, col + 1);\n      }\n\n      for (var num = 1; num < 10; num++) {\n        if (this.isSafe(grid, row, col, num)) {\n          grid[row][col] = num;\n\n          if (this.solveSudoku(grid, row, col + 1)) {\n            return grid;\n          }\n        }\n\n        grid[row][col] = 0;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"isSafe\",\n    value: function isSafe(grid, row, col, num) {\n      for (var x = 0; x <= 8; x++) {\n        if (grid[row][x] == num) {\n          return false;\n        }\n      }\n\n      for (var _x = 0; _x <= 8; _x++) {\n        if (grid[_x][col] == num) {\n          return false;\n        }\n      }\n\n      var startRow = row - row % 3;\n      var startCol = col - col % 3;\n\n      for (var i = 0; i < 3; i++) {\n        for (var j = 0; j < 3; j++) {\n          if (grid[i + startRow][j + startCol] == num) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n    }\n  }, {\n    key: \"transform\",\n    value: function transform(puzzleString) {\n      var grid = [[0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0]];\n      var row = -1;\n      var col = 0;\n\n      for (var i = 0; i < puzzleString.length; i++) {\n        if (i % 9 == 0) {\n          row++;\n        }\n\n        if (col % 9 == 0) {\n          col = 0;\n        }\n\n        grid[row][col] = puzzleString[i] === \".\" ? 0 : +puzzleString[i];\n        col++;\n      }\n\n      return grid;\n    }\n  }, {\n    key: \"transformBack\",\n    value: function transformBack(grid) {\n      return grid.flat().join(\"\");\n    }\n  }, {\n    key: \"solve\",\n    value: function solve(puzzleString) {\n      if (puzzleString.length != 81) {\n        return false;\n      }\n\n      if (/[^0-9.]/g.test(puzzleString)) {\n        return false;\n      }\n\n      var grid = this.transform(puzzleString);\n      var solved = this.solveSudoku(grid, 0, 0);\n\n      if (!solved) {\n        return false;\n      }\n\n      var solvedString = this.transformBack(solved);\n      return solvedString;\n    }\n  }]);\n\n  return SudokuSolver;\n}();\n\nmodule.exports = SudokuSolver;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "sudoku-solver.js"
      ],
      "names": [
        "SudokuSolver",
        "puzzleString",
        "row",
        "toUpperCase",
        "column",
        "value",
        "grid",
        "transform",
        "letterToNumber",
        "i",
        "col",
        "startRow",
        "startCol",
        "j",
        "solveSudoku",
        "num",
        "isSafe",
        "x",
        "length",
        "flat",
        "join",
        "test",
        "solved",
        "solvedString",
        "transformBack",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/VUNsMacOS/Desktop/sudoku-solver/controllers/",
      "sourcesContent": [
        "class SudokuSolver {\n\n  validate(puzzleString) {\n  }\n\n  letterToNumber(row) {\n    switch (row.toUpperCase()) {\n      case \"A\":\n        return 1;\n      case \"B\":\n        return 2;\n      case \"C\":\n        return 3;\n      case \"D\":\n        return 4;\n      case \"E\":\n        return 5;\n      case \"F\":\n        return 6;\n      case \"G\":\n        return 7;\n      case \"H\":\n        return 8;\n      case \"I\":\n        return 9;\n      default:\n        return \"none\";\n    }\n  }\n\n  checkRowPlacement(puzzleString, row, column, value) {\n    let grid = this.transform(puzzleString);\n    row = this.letterToNumber(row);\n    if (grid[row - 1][column - 1] == value) {\n      return true;\n    }\n    for(let i = 0; i < 9; i++) {\n      if (grid[row - 1][i] == value) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  checkColPlacement(puzzleString, row, column, value) {\n    let grid = this.transform(puzzleString);\n    row = this.letterToNumber(row);\n    if (grid[row - 1][column - 1] == value) {\n      return true;\n    }\n    for(let i = 0; i < 9; i++) {\n      if (grid[i][column - 1] == value) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  checkRegionPlacement(puzzleString, row, col, value) {\n    let grid = this.transform(puzzleString);\n    row = this.letterToNumber(row);\n    if (grid[row - 1][col - 1] == value) {\n      return true;\n    }\n    let startRow = row - (row % 3),\n    startCol = col - (col % 3);\n    for(let i = 0; i < 3; i++) {\n      for(let j = 0; j < 3; j++) {\n        if (grid[i + startRow][j + startCol] == value) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  solveSudoku(grid, row, col) {\n    if (row == 9 - 1 && col == 9) {\n      return grid;\n    }\n    if (col == 9) {\n      row++;\n      col = 0;\n    }\n    if (grid[row][col] != 0) {\n      return this.solveSudoku(grid, row, col + 1);\n    }\n    \n    for(let num = 1; num < 10; num++) {\n      if (this.isSafe(grid, row, col, num)) {\n        grid[row][col] = num;\n\n        if (this.solveSudoku(grid, row, col + 1)) {\n          return grid;\n        }\n      }\n      grid[row][col] = 0;\n    }\n    return false;\n  }\n\n  isSafe(grid, row, col, num) {\n    for(let x = 0; x <= 8; x++) {\n      if (grid[row][x] == num) {\n        return false;\n      }\n    }\n\n    for(let x = 0; x <= 8; x++) {\n      if (grid[x][col] == num) {\n        return false;\n      }\n    }\n\n    let startRow = row - row % 3; \n    let startCol = col - col % 3;\n          \n    for(let i = 0; i < 3; i++) {\n      for(let j = 0; j < 3; j++) {\n        if (grid[i + startRow][j + startCol] == num) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n  transform(puzzleString) {\n    let grid = [\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0],\n      [0, 0, 0, 0, 0, 0, 0, 0, 0]\n    ];\n    let row = -1;\n    let col = 0;\n\n    for(let i = 0; i < puzzleString.length; i++) {\n      if (i % 9 == 0) {\n        row++;\n      }\n      if (col % 9 == 0) {\n        col = 0;\n      }\n\n      grid[row][col] = puzzleString[i] === \".\" ? 0 : +puzzleString[i];\n      col++;\n    }\n    return grid;\n  }\n\n  transformBack(grid) {\n    return grid.flat().join(\"\");\n  }\n\n  solve(puzzleString) {\n    if (puzzleString.length != 81) {\n      return false;\n    }\n    if (/[^0-9.]/g.test(puzzleString)) {\n      return false;\n    }\n    let grid = this.transform(puzzleString);\n    let solved = this.solveSudoku(grid, 0, 0);\n\n    if (!solved) {\n      return false;\n    }\n    let solvedString = this.transformBack(solved);\n    return solvedString;\n  }\n}\n\nmodule.exports = SudokuSolver;\n\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1681569600988
  }
}